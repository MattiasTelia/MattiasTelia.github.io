name: Prerelase

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release"
        required: true

jobs:
  CreateReleaseBranch:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Grant write permissions to the GITHUB_TOKEN
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3

      - name: Create and push release branch
        run: |
          git fetch origin
          git branch release/${{ inputs.version }}
          git push origin release/${{ inputs.version }}

      - name: Checkout the created branch
        run: |
          git checkout release/${{ inputs.version }}

      - name: Update version in package.json
        run: |
          jq ".version = \"${{ inputs.version }}\"" package.json > package.tmp.json
          mv package.tmp.json package.json

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "Update version to ${{ inputs.version }}"
          git push origin HEAD   

      # From WebSDK deploy script
      #  # Set up ssh stuff
      #  # Install dependency stuff
      #  # Get and construct version and build number
      #  # Build WebSDK
      #  # Deploy WebSDK

      # if build and deploy was successfull
      - name: Create tag if it does not exist
        run: |
          TAG_NAME=${{ inputs.version }}
          if git rev-parse "refs/tags/$TAG_NAME" >/dev/null 2>&1; then
            echo "Tag $TAG_NAME already exists."
          else
            git tag $TAG_NAME
            git push origin $TAG_NAME
            echo "Tag $TAG_NAME created and pushed."
          fi

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ inputs.version }}
          release_name: "Release ${{ inputs.version }}"
          body: "This is the release for version ${{ inputs.version }}."
          draft: false
          prerelease: true

      - name: Upload asset to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./releaseFiles/ACE Web SDK Release Notes.pdf"
          asset_name: "ACE Web SDK Release Notes.pdf"
          asset_content_type: application/pdf