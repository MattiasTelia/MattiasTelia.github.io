name: Prerelase

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release"
        required: true

jobs:
  CreateReleaseBranch:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Grant write permissions to the GITHUB_TOKEN
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3

      - name: Create and push release branch
        run: |
          git fetch origin
          git branch release/${{ inputs.version }}
          git push origin release/${{ inputs.version }}

      - name: Checkout the created branch
        run: |
          git checkout release/${{ inputs.version }}

      - name: Update version in package.json
        run: |
          jq ".version = \"${{ inputs.version }}\"" package.json > package.tmp.json
          mv package.tmp.json package.json

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "Update version to ${{ inputs.version }}"
          git push origin HEAD   

    BuildAndDeploy:
      runs-on: ubuntu-latest
      needs: CreateReleaseBranch
      steps:
      - name: Call build and deploy script
        run: |
          echo "Building and deploying WebSDK..."
          # Call your build and deploy script here
          # For example:
          # ./build_and_deploy.sh

      # From WebSDK deploy script
      #  # Set up ssh stuff
      #  # Install dependency stuff
      #  # Get and construct version and build number
      #  # Build WebSDK
      #  # Deploy WebSDK

    UpdateInstances:
      runs-on: ubuntu-latest
      needs: BuildAndDeploy
      steps:
      - name: Update systemtest and systemtest-e2e instances
        run: |
          echo "Call 'Deploy instance to WDS (DDC)' script in setupinstances repository"

    CreateTestplan:
      runs-on: ubuntu-latest
      needs: BuildAndDeploy
      steps:
      - name: Create testplan and test executions in Jira
        run: |
          echo "Create testplan and test executions in Jira"
          